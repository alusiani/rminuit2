% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rminuit2.R
\name{rminuit2_expr}
\alias{rminuit2_expr}
\title{Function Minimization and model fitting with Minuit2}
\usage{
rminuit2_expr(formula, start, data = NULL, weights = NULL, errors = NULL,
  err = NULL, lower = NULL, upper = NULL, fix = NULL,
  lh = c("Gaussian"), opt = "h", maxcalls = 0L, nsigma = 1,
  rhs_vars = NULL, ...)
}
\arguments{
\item{formula}{expression describing the model to be fitted to data}

\item{start}{initial values of the model parameters to be fitted}

\item{data}{list or data.frame containing the data to be fitted to the model}

\item{weights}{formula corresponding to weights to assign to the data observations}

\item{errors}{formula corresponding to the uncertaintites of the data observations}

\item{err}{numeric vector, expected uncertainty of function parameters}

\item{lower}{numeric vector, lower bounds for the parameters (default none)}

\item{upper}{numeric vector, upper bounds for the parameters (default none)}

\item{fix}{boolean vector, each TRUE element fixes the corresponding parameter}

\item{lh}{desired likelihood for the measurement errors, one of:
 \describe{
   \item{\code{Gaussian}:}{measurements have Gaussian errors}
}}

\item{opt}{string, pass fit options, default "h" (compute HESSE errors)
\describe{
\item{\code{v}:}{Verbose mode (not yet implemented)}
\item{\code{h}:}{Run Hesse to estimate errors}
\item{\code{m}:}{Get Minos errors}
\item{\code{0}:}{Run Migrad with strategy 0}
\item{\code{1}:}{Run Migrad with strategy 1}
\item{\code{2}:}{Run Migrad with strategy 2}
\item{neither \code{1}, \code{2}, \code{3}:}{Run Migrad with strategy 1, and if it fails run with strategy 2}
}}

\item{maxcalls}{integer, maximum number of calls, defaults to \code{0} (no limit).}

\item{nsigma}{numeric, number of standard deviations for Minos errors}

\item{rhs_vars}{character vector with the name of all variables in the right-hand
side (RHS) of formula. The code attempts to get the variables automatically from the formula
expression if this argument is not provided, but may fail. For simple formula, most often
there is no need to provide this argument.}

\item{...}{extra arguments for the model, weights and error formulas}
}
\value{
A list with the following components:
 \describe{
   \item{\code{fval}:}{Value of function at found minimum (1/2 * chi square if the function is the negative log-likelihood of a Gaussian  likelihood.}
   \item{\code{Edm}:}{Estimated distance from the value of the function true minimum}
   \item{\code{par}:}{Fitted parameters}
   \item{\code{err}:}{Estimated uncertainties of fitted parameters}
   \item{\code{cov}:}{Covariance matrix of the fitted parameters}
   \item{\code{cor}:}{Correlation matrix of the fitted parameters}
   \item{\code{chisq}:}{Chi square (sum of the residuals divided by their estimated uncertainties) at the minimum.}
   \item{\code{ndof}:}{Number of degrees of freedom, equal to the number of observations minus the number of the optimized fit parameters}
   \item{\code{nobs}:}{Number of observations}
   \item{\code{err_minos_pos}:}{Minos-estimated positive parameters' uncertainties (if Minos errors were requested)}
   \item{\code{err_minos_neg}:}{Minos-estimated negative parameters' uncertainties (if Minos errors requested)}
   \item{\code{err_minos_pos_valid}:}{boolean vector, TRUE if Minos positive uncertainties are valid (if Minos errors were requested)}
   \item{\code{err_minos_neg_valid}:}{boolean vector, TRUE if Minos negative uncertainties are valid (if Minos errors were requested)}
   \item{\code{fun}:}{function corresponding to model with parameters initialized to the fitted values}
   \item{\code{fun_par}:}{function corresponding to model with parameters initialized to the fitted values, all parameters are passed as a possibly-named numeric vector in the last argument, which is named \code{par}}
   \item{\code{fun_mll}:}{Function that has been assembled to compute the likelihood, with a single argument par containing all fitted parameters, plus extra arguments for the extra parameters, if existing}
   \item{\code{fun_pulls}:}{Function returning the array of pulls (residual divided by estimated uncertainty), one for each observation. It has the same parameters as \code{fun_mll}}
   \item{\code{allOK}:}{TRUE if the fit converged and the parameters and their covariance are OK}
   \item{\code{MinosErrorsValid}:}{TRUE if the MINOS errors are all valid}
   \item{\code{IsValid}:}{TRUE if the fit minimization converged}
   \item{\code{IsValidFirstInvocation}:}{TRUE if Minuit strategy 1 succeeded (if it failed Minuit2 strategy 2 is performed)}
   \item{\code{IsAboveMaxEdm}:}{TRUE if the estimated distance from the true minimum is above the tolerance}
   \item{\code{HasReachedCallLimit}:}{TRUE if the maximum call limit was exceeded}
   \item{\code{HasValidParameters}:}{TRUE if the fitted parameters are considered valid}
   \item{\code{HasCovariance}:}{TRUE if a covariance matrix is returned}
   \item{\code{HasValidCovariance}:}{TRUE if the estimated covariance matrix is considered valid}
   \item{\code{HasAccurateCovar}:}{TRUE if the accuracy of the estimated covariance matrix is considered valid}
   \item{\code{HasPosDefCovar}:}{TRUE if the numerically computed covariance matrix is positive definite}
   \item{\code{HasMadePosDefCovar}:}{TRUE if the covariance matrix has been adjusted to make it positive definite}
   \item{\code{HesseFailed}:}{TRUE if the numeric computation of the HESSE matrix failed}
 }
}
\description{
Fit data to a model performing minus log-likelihood minimization using
\href{https://project-mathlibs.web.cern.ch/project-mathlibs/sw/Minuit2/html/index.html}{Minuit2}
and assuming Gaussian uncertainties
}
\examples{
#
# simulate model y = a*exp(-x/b) + k
#
x = seq(0, 1, length.out=31)
y.func = function(x, norm, tau, const) norm*exp(-x/tau) + const

#
# simulate data with Gaussian errors for specific model
# the model includes norm and tau but not const, which is a fixed parameter
#
model.par = c(norm=2.3, tau=0.47)
model.extra.const = 4.7
y.err = 0.01
y = do.call(y.func, c(list(x), model.par, const=model.extra.const)) + rnorm(sd=y.err, n=length(x))

# fit model on data, ask to compute Minos errors too
fit.rc = rminuit2_expr(y ~ norm*exp(-x/tau) + const, c(norm=1, tau=10),
  data=data.frame(x=x, y=y, y.err=y.err), errors=y.err,
  lh="Gaussian", opt="hm", const=model.extra.const)

# chi square / number of degrees of freedom
cbind(chisq=fit.rc$chisq, ndof=fit.rc$ndof)

# fitted parameters and their estimated uncertainties
cbind(model.value=model.par, value=fit.rc$par, error=fit.rc$err,
      minos_pos=fit.rc$err_minos_pos, minos_neg=fit.rc$err_minos_neg)

# parameters' correlation matrix
fit.rc$cor

}
\seealso{
rminuit2 rminuit2_par
}
